import org.jetbrains.kotlin.gradle.plugin.KotlinSourceSet
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
import org.springframework.boot.gradle.tasks.run.BootRun

val kotlinVersion = "1.3.30"

plugins {
    //id("war")
    id("idea")
    kotlin("jvm") version "1.3.30"
    id("org.gretty") version "2.2.0"
    id("org.springframework.boot") version "2.1.4.RELEASE"
    id("org.jetbrains.kotlin.plugin.spring") version "1.3.30"
    id("org.jetbrains.kotlin.plugin.jpa") version "1.3.30"
    id("io.spring.dependency-management") version "1.0.7.RELEASE"
}

repositories {
    mavenCentral()
    mavenLocal()
    jcenter()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    //compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("com.h2database:h2")
    compile("ch.qos.logback:logback-core:1.1.3")
    compile("ch.qos.logback:logback-classic:1.1.3")

    implementation("org.jetbrains.kotlin:kotlin-reflect")
    //implementation(kotlin("stdlib-jdk8"))
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    //providedRuntime("org.springframework.boot:spring-boot-starter-tomcat")

    testCompile("org.springframework.boot:spring-boot-starter-test")

    testImplementation("org.mockito:mockito-core:2.7.19")
    testImplementation ("org.junit.jupiter:junit-jupiter-api:5.5.0-M1")
    testImplementation ("org.junit.jupiter:junit-jupiter:5.5.0-M1")

    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.5.0-M1")
}

gretty{
    httpPort = 8090
    contextPath = "/"
    springBoot = true
}

springBoot {
    mainClassName = "org.sample.demo.GreetingKt"
}

sourceSets["main"].java.srcDir("src/main/java")
sourceSets["main"].withConvention(KotlinSourceSet::class) {
    kotlin.srcDir("src/main/kotlin")
}

open class Greeting: DefaultTask() {
    lateinit var message: String
    lateinit var recipient: String

    @TaskAction
    fun sayGreeting(){
        println("From Kotlin File: $message, $recipient")
    }

}

tasks.withType<KotlinCompile>{
    kotlinOptions {
        jvmTarget = "1.8"
        freeCompilerArgs = listOf("-Xjsr305=strict")
    }
}

tasks.register<Greeting>("helloKotlin"){
    group = "Welcome"
    description = "Displays a Kotlin Hello Message."
    message =  "Hello"
    recipient = "KotlinUser"
}

tasks.register<Greeting>("helloGradle"){
    group = "Welcome"
    description = "Displays a Gradle Hello Message."
    message =  "Hello"
    recipient = "GradleUser"
}

tasks.register<Exec>("dir") {
    description = "Displays directory contents."
    commandLine = listOf("ls")
}

tasks.register<Exec>("buildNg") {
    group = "Build"
    description = "Builds Angular modules."
    commandLine = listOf("npm", "run", "build")
}

tasks.register<Copy>("copyNgFiles") {
    group = "Copy"
    description = "Copy compiled angular files to build directory."
    from("dist/NonAngularAsMain")
    into("build/inplaceWebapp")
}

tasks.register<GradleBuild>("buildAndRun") {
    group = "Run"
    description = "Builds and runs the application."
    tasks = listOf("clean", "build", "buildNg", "copyNgFiles", "appRun")
}

tasks.register<GradleBuild>("buildBootRun") {
    group = "Run"
    description = "Builds and runs the application as a SpringBoot application."
    tasks  = listOf("clean", "build", "buildNg", "copyNgFiles", "bootRun")
}

